"""Initial database setup

Revision ID: ea8fc66fb249
Revises: 
Create Date: 2024-01-13 15:57:54.242745

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ea8fc66fb249'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('mime', sa.String(), nullable=False),
    sa.Column('path', sa.String(), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('size_bytes', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('token_blocklist',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('jti', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_token_blocklist_jti'), ['jti'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('institution',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('active_on_website', sa.Boolean(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('document', sa.String(), nullable=False),
    sa.Column('has_banking_account', sa.Boolean(), nullable=False),
    sa.Column('banking_account', sa.JSON(), nullable=True),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('file_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itinerary',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('current_step', sa.String(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('boarding_date', sa.Date(), nullable=False),
    sa.Column('landing_date', sa.Date(), nullable=False),
    sa.Column('seats', sa.Integer(), nullable=False),
    sa.Column('seat_price', sa.Numeric(), nullable=False),
    sa.Column('purchase_deadline', sa.Date(), nullable=False),
    sa.Column('installments', sa.Integer(), nullable=False),
    sa.Column('details', sa.String(), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.Column('services', sa.String(), nullable=False),
    sa.Column('terms_and_conditions', sa.String(), nullable=False),
    sa.Column('institution_id', sa.UUID(), nullable=True),
    sa.Column('cover_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['cover_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institution.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itinerary_document',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('link', sa.String(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=True),
    sa.Column('itinerary_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['file.id'], ),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itinerary_entry',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('itinerary_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itinerary_photo',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('photo_id', sa.UUID(), nullable=True),
    sa.Column('itinerary_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.id'], ),
    sa.ForeignKeyConstraint(['photo_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('itinerary_rule',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('position', sa.Integer(), nullable=False),
    sa.Column('purchase_deadline', sa.Date(), nullable=False),
    sa.Column('installments', sa.Integer(), nullable=False),
    sa.Column('itinerary_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('inserted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['itinerary_id'], ['itinerary.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('itinerary_rule')
    op.drop_table('itinerary_photo')
    op.drop_table('itinerary_entry')
    op.drop_table('itinerary_document')
    op.drop_table('itinerary')
    op.drop_table('institution')
    op.drop_table('user')
    with op.batch_alter_table('token_blocklist', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_token_blocklist_jti'))

    op.drop_table('token_blocklist')
    op.drop_table('file')
    # ### end Alembic commands ###
